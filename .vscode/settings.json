{
    // ========================================================================================================
    // 僅適用於 User Settings 的設定 (不會在 Workspace Settings 中生效)
    // ========================================================================================================
    "chat.editing.confirmEditRequestRemoval": true, // 是否在編輯建議中確認移除編輯請求
    // ========================================================================================================
    // VSCode 外觀設定 (UI/UX, Theme, Icon, Background)
    // ========================================================================================================
    // VSCode UI/UX 設定
    "workbench.startupEditor": "none", // 關閉啟動時的歡迎頁面
    "workbench.sideBar.location": "left", // Primary Side Bar 的位置
    "workbench.activityBar.location": "default", // Activity Bar 的位置
    "workbench.statusBar.visible": true, // 是否顯示 Status Bar
    "extensions.ignoreRecommendations": false, // 延伸套件的通知是否不再顯示
    "breadcrumbs.enabled": true, // 是否顯示麵包屑 (檔案路徑的導覽)
    "editor.minimap.enabled": true, // 是否顯示右側小地圖
    "editor.minimap.renderCharacters": true, // 是否渲染小地圖字體
    "editor.renderControlCharacters": true, // 是否顯示特殊字元
    "editor.mouseWheelZoom": true, // 按住 Ctrl 鍵並滾動鼠標滾輪時是否可對編輯器字體大小進行縮放
    "editor.scrollBeyondLastLine": false, // false 時將防止編輯器 (頂端) 滾動到最後一行
    "editor.padding.bottom": 300, // 控制編輯器底部邊緣和最後一行之間的空間量，以像素為單位。須將 editor.scrollBeyondLastLine 設為 false
    "editor.lineHeight": 19, // 行高
    "editor.fontSize": 14, // 字體大小
    "editor.cursorWidth": 2, // 游標粗細
    "editor.detectIndentation": false, // 根據檔案內容，控制當檔案開啟時，是否自動偵測 tabSize 和 insertSpaces
    "editor.tabSize": 4, // Tab 等校之空格數量 (當 editor.detectIndentation 已開啟時，會根據檔案內容覆寫此設定)
    // VSCode Color Theme 設定
    "window.autoDetectColorScheme": false, // 是否自動偵測作業系統的深色/淺色主題
    "workbench.colorTheme": "Default Dark Modern", // 預設深色主題
    "workbench.preferredDarkColorTheme": "Default Dark Modern", // 偏好的深色主題
    "workbench.preferredLightColorTheme": "Default Light Modern", // 偏好的淺色主題
    // VSCode Icon Theme 設定
    "workbench.iconTheme": "material-icon-theme", // Material Icon Theme 檔案圖示主題 (須安裝 PKief.material-icon-theme 套件)
    // VSCode Font 設定
    // Fira Code: https://github.com/tonsky/FiraCode
    "editor.fontFamily": "'Fira Code', Consolas, 'Courier New', monospace", // 在編輯器中使用的字體
    "editor.fontLigatures": true, // 啟用連字字型
    // Background 設定 (須安裝 shalldie.background 套件)
    "background.editor": {
        "useFront": true, // 將影像放在程式碼上方或下方
        "style": {
            "background-position": "center",
            "background-size": "cover",
            "background-repeat": "no-repeat",
            "opacity": 0.05
        }, // 影像的自訂樣式 (MDN Reference)
        // Local images can be dragged into the browser to quickly get the file protocol address from the address bar
        "images": [
            "file:///D:/Others/Backgrounds/VSCodeEditorBackground.png"
        ], // 自訂影像，支援 https 和 file 協議
        "interval": 0, // 輪播間隔的秒數，預設 0 為停用
        "random": false // 是否隨機顯示影像
    },
    "background.fullscreen": {},
    "background.sidebar": {},
    "background.panel": {
        "useFront": true, // 將影像放在程式碼上方或下方
        "style": {
            "background-position": "center",
            "background-size": "cover",
            "background-repeat": "no-repeat",
            "opacity": 0.05
        }, // 影像的自訂樣式 (MDN Reference)
        // Local images can be dragged into the browser to quickly get the file protocol address from the address bar
        "images": [
            "file:///D:/Others/Backgrounds/VSCodeEditorPanelBackground.png"
        ], // 自訂影像，支援 https 和 file 協議
        "interval": 0, // 輪播間隔的秒數，預設 0 為停用
        "random": false // 是否隨機顯示影像
    },
    // Markdown Preview Enhanced 設定 (須安裝 shd101wyy.markdown-preview-enhanced 套件)
    "markdown-preview-enhanced.previewTheme": "github-dark.css", // Markdown 預覽的主題
    "markdown-preview-enhanced.codeBlockTheme": "github-dark.css", // Markdown 預覽的程式碼區塊主題
    // VSCode Pets 設定 (須安裝 tonybaloney.vscode-pets 套件)
    "vscode-pets.disableEffects": true, // 是否禁用特效
    "vscode-pets.petSize": "medium", // 寵物大小 (small, medium, large)
    "vscode-pets.petType": "cat", // 寵物類型
    "vscode-pets.petColor": "orange", // 寵物顏色
    "vscode-pets.position": "explorer", // 寵物位置 (explorer, panel)
    "vscode-pets.theme": "beach", // 主題 (none, forest, castle, beach, winter)
    "vscode-pets.throwBallWithMouse": true, // 是否使用滑鼠丟球
    // ========================================================================================================
    // VSCode Files 設定
    // ========================================================================================================
    "files.exclude": { // 隱藏檔案或資料夾 (false 時，顯示檔案或資料夾)
        "**/.git": false // 顯示 git 資料夾
    },
    "files.associations": { // 檔案關聯設定 (將檔案關聯到特定語言)
        "*.embeddedhtml": "html", // Embedded HTML
        "*.json": "jsonc", // JSON with comments
        "*.jsx": "javascript", // React JSX
        "*.easylanguage": "easylanguage", // EasyLanguage mode for .easylanguage files
        "*.el": "easylanguage", // EasyLanguage mode for .el files
        "*.elf": "easylanguage", // EasyLanguage mode for .elf files
        "*.eslfunc": "easylanguage" // EasyLanguage mode for .eslfunc files
    },
    "files.autoSave": "onFocusChange", // 切換檔案時 自動存檔
    "files.defaultLanguage": "${activeEditorLanguage}", // ctrl+N 新建文件後默認的語言 (${activeEditorLanguage} 表示當前編輯器的語言)
    "files.autoGuessEncoding": true, // 自動偵測檔案編碼格式
    "files.trimTrailingWhitespace": true, // 保存時，刪除每一行末尾的空格
    "files.insertFinalNewline": false, // 若為 true 則儲存後檔案最末尾加一整行空行
    // ========================================================================================================
    // Programming Language Environment Path Settings
    // ========================================================================================================
    // PHP 設定
    "php.validate.executablePath": "C:/xampp/php/php.exe", // php 執行擋路徑
    // ========================================================================================================
    // Terminal 設定
    // ========================================================================================================
    "terminal.integrated.defaultProfile.windows": "PowerShell", // 預設終端機
    "terminal.integrated.fontFamily": "'FiraCode Nerd Font'", // 在終端機中使用的字體 (使用 Nerd 字體，避免 Oh My Posh Icon 顯示亂碼)
    "terminal.integrated.scrollback": 10000, // 終端機的滾動緩衝區大小 (Agent Mode 建議調高預設 Terminal 的捲軸行數)
    // ========================================================================================================
    // Code Runner 設定 (須安裝 formulahendry.code-runner 套件)
    // ========================================================================================================
    "code-runner.runInTerminal": true, // 設置成 false 會在"輸出"中輸出，無法進行輸入
    "code-runner.saveFileBeforeRun": true, // 是否在 run code 前保存該檔案
    "code-runner.preserveFocus": true, // 若為 false，run code 後光標會聚焦到終端上。如果需要頻繁輸入數據可設為 false
    "code-runner.clearPreviousOutput": false, // 每次 run code 前清空屬於 code runner 的終端消息
    "code-runner.executorMap": { // 設置 code runner 的命令行為
        "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "cpp": "cd $dir && g++ -std=c++2a -fconcepts $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "python": "$pythonPath $fullFileName"
    },
    // ========================================================================================================
    // Formatter & Linter 設定
    // ========================================================================================================
    // VSCode Format 時機設定
    "editor.formatOnSave": true, // 保存時自動格式化
    "editor.formatOnType": true, // 輸入時就進行格式化，默認觸發字符較少，分號可以觸發
    // Json 設定
    "[json][jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features" // JSON 使用 VSCode 內建的格式化器
    },
    // C/C++ 設定
    "C_Cpp.clang_format_sortIncludes": true, // 格式化時調整 include 的順序 (按字母排序)
    "C_Cpp.intelliSenseEngine": "default", // 可以為 default 或 Tag Parser，後者較老，功能較簡單。具體差別參考 cpptools 擴展文檔
    "C_Cpp.clang_format_style": "{BasedOnStyle: Google, IndentWidth: 4, IndentCaseLabels: false, TabWidth: 4, UseTab: ForIndentation, ColumnLimit: 0}", // Google 排版風格
    // "C_Cpp.clang_format_fallbackStyle": "Visual Studio", // 預設排版風格
    // "C_Cpp.errorSquiggles": "Disabled", // 若有 clang 的 lint，可以關掉
    // "C_Cpp.autocomplete": "Disabled", // 若有 clang 的補全，可以關掉
    // Python 設定
    "[python]": {
        "editor.formatOnSave": true, // 保存時自動格式化
        "editor.codeActionsOnSave": { // 保存時觸發的動作
            "source.fixAll": "explicit", // 修復所有問題 (須安裝 charliermarsh.ruff 套件)
            "source.organizeImports": "explicit" // 格式化時調整 import 的順序 (須安裝 ms-python.isort 套件)
        },
        "editor.defaultFormatter": "charliermarsh.ruff" // 使用 ruff 作為 Formatter (須安裝 charliermarsh.ruff 套件)
        // "editor.defaultFormatter": "ms-python.autopep8" // 使用 autopep8 (須安裝 ms-python.autopep8 套件)
    },
    "ruff.organizeImports": false, // 是否使用 ruff 在格式化時調整 import 的順序 (例如設為 false 並搭配 ms-python.isort 套件使用)
    // Jupyter Notebook 設定
    "notebook.formatOnSave.enabled": true, // 保存時自動格式化
    "notebook.codeActionsOnSave": { // 保存時觸發的動作
        "notebook.source.fixAll": "explicit", // 修復所有問題 (須安裝 charliermarsh.ruff 套件)
        "notebook.source.organizeImports": "explicit" // 格式化時調整 import 的順序 (須安裝 ms-python.isort 套件)
    },
    // Javascript 設定
    "[javascript][javascriptreact][typescript][typescriptreact]": {
        "editor.codeActionsOnSave": { // 保存時觸發的動作
            "source.fixAll.eslint": "explicit" // 儲存時自動修正 ESLint 問題
        },
        "editor.defaultFormatter": "esbenp.prettier-vscode" // 使用 dbaeumer.vscode-eslint 作為 Formatter
    },
    // EasyLanguage 設定
    "[easylanguage]": {
        "editor.defaultFormatter": "RiderTradingTools.easylanguage" // 使用 EasyLanguage 套件格式化 (須安裝 RiderTradingTools.easylanguage 套件)
    },
    // ========================================================================================================
    // ESLint 設定 (須安裝 dbaeumer.vscode-eslint 套件)
    // ========================================================================================================
    "eslint.format.enable": true, // 是否啟用 ESLint 格式化
    "eslint.options": {
        "extensions": [
            ".html",
            ".js",
            ".jsx",
            ".ts",
            ".tsx",
            ".vue"
        ]
    }, // ESLint 檢查的檔案類型
    "eslint.validate": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
    ], // 使用 ESLint 驗證的語言
    // ========================================================================================================
    // HTML/CSS/JavaScript Emmet 設定
    // ========================================================================================================
    "javascript.inlayHints.parameterNames.enabled": "literals", // 參數名稱嵌入提示例如顯示函數調用中的參數名稱 [none, literals, all]
    // "emmet.includeLanguages": { // 在預設不支援的語言中啟用 Emmet 縮寫
    //     "javascript": "html"
    // },
    "emmet.triggerExpansionOnTab": true, // 是否在按下 Tab 鍵時觸發 Emmet 縮寫擴展
    "emmet.useInlineCompletions": true, // 是否使用內聯補全功能 (Emmet 會在編輯器中提供即時的縮寫建議)
    // ========================================================================================================
    // GitHub Copilot 設定
    // ========================================================================================================
    // 參考連結：https://github.com/doggy8088/github-copilot-configs
    // GitHub Copilot General 設定
    "github.copilot.enable": { // 是否啟用 GitHub Copilot
        "*": true,
        "plaintext": true,
        "markdown": true,
        "scminput": true
    },
    "window.commandCenter": true, // 若要啟用 chat.commandCenter.enabled 設定，必須將此設定設為 true
    "chat.commandCenter.enabled": true, // 是否在編輯器中啟用 Copilot Chat 指令中心按鈕
    "search.searchView.semanticSearchBehavior": "runOnEmpty", // 在搜尋檢視 (使用 AI 搜尋) 中的語意搜尋行為 (manual: 手動啟用，always: 總是啟用，runOnEmpty: 在搜尋結果為空時啟用)
    "workbench.commandPalette.experimental.askChatLocation": "chatView", // Ask Chat Location (chatView 會留下歷史記錄)
    "github.copilot.renameSuggestions.triggerAutomatically": true, // 是否自動觸發重命名建議
    "github.copilot.nextEditSuggestions.enabled": true, // 是否啟用下一個編輯建議 (NES) 功能，NES 可以根據最近的變更建議下一個編輯 (https://aka.ms/vscode-nes)
    // GitHub Copilot Chat 設定
    "github.copilot.chat.localeOverride": "zh-TW", // 回應語言設定
    "github.copilot.chat.useProjectTemplates": true, // 使用 /new 時，是否使用專案模板
    "github.copilot.chat.scopeSelection": true, // 如果使用者使用 /explain 並且使用中編輯器沒有選取，是否提示使用者選取特定符號範圍
    "github.copilot.chat.agent.thinkingTool": true, // 是否啟用思考工具
    "chat.detectParticipant.enabled": false, // 是否啟用自動檢測參與者 (true 似乎經常找錯聊天參與者)
    // GitHub Copilot Chat - 自訂指令設定
    "github.copilot.chat.codeGeneration.useInstructionFiles": true, // 控制來自 '.github/copilot-instructions.md' 的程式碼指示是否要新增到 Copilot 要求
    "chat.instructionsFilesLocations": {
        ".github/instructions": true, // 指令檔案 (*.instructions.md) 的位置設定
    },
    // GitHub Copilot Chat - 可重複使用的提示詞設定
    "chat.promptFiles": true, // 是否在 [聊天]、[編輯] 及 [即時聊天] 工作階段中啟用可重複使用的提示 (*.prompt.md`) 和指令檔案
    "chat.promptFilesLocations": { // 提示檔案 (*.prompt.md) 的位置設定
        ".github/prompts": true
    },
    // GitHub Copilot Chat - 聊天模式設定
    "chat.modeFilesLocations": {
        ".github/chatmodes": true // 聊天模式檔案 (*.chatmode.md) 的位置設定
    },
    // GitHub Copilot Chat - 偵錯相關設定
    "github.copilot.chat.copilotDebugCommand.enabled": true, // 是否啟用 Copilot Debug 命令
    "github.copilot.chat.startDebugging.enabled": true, // 在 Chat View 啟用 /startDebugging 命令，幫你快速在 VS Code 初始化偵錯相關設定
    "github.copilot.chat.reviewSelection.enabled": true, // 是否啟用目前選取項目的程式碼檢閱
    // GitHub Copilot Chat - 測試相關設定
    "github.copilot.chat.setupTests.enabled": true, // 在 Chat View 啟用 /setupTests 命令，幫你快速在 VS Code 初始化測試相關設定
    "github.copilot.chat.generateTests.codeLens": true, // 是否在編輯器中啟用生成測試的 CodeLens
    // GitHub Copilot Chat (Inline Chat) 設定
    "inlineChat.holdToSpeech": true, // 啟用按住不放 Ctrl+U 或 Ctrl+I 開始語音對話
    "inlineChat.finishOnType": false, // 在編輯器中輸入時，自動結束 Inline Chat 對話 (true 會自動結束)
    "github.copilot.chat.editor.temporalContext.enabled": true, // 是否要在 Copilot 要求中包含最近檢視及編輯過的檔案
    // GitHub Copilot Edit 設定
    "github.copilot.chat.edits.temporalContext.enabled": false, // 是否在編輯建議中包含最近檢視及編輯過的檔案
    "github.copilot.chat.edits.suggestRelatedFilesForTests": true, // 是否在編輯建議中建議相關的測試檔案
    "github.copilot.chat.edits.suggestRelatedFilesFromGitHistory": true, // 是否在編輯建議中建議相關的 Git 歷史檔案
    "github.copilot.chat.codesearch.enabled": true, // 是否啟用 #codebase 變數的代理人原始碼搜尋功能，嘗試多種不同的搜尋條件
    "github.copilot.chat.newWorkspaceCreation.enabled": true, // 是否啟用 @workspce /new 命令，使用相關的 GitHub 專案作為專案範本
    "chat.agent.enabled": true, // 是否啟用 Copilot Agent Mode
    "chat.agent.maxRequests": 50, // Agent Mode 最大編輯請求數量 (default: 15)
    // GitHub Copilot Accessibility (Voice) 設定
    "accessibility.voice.speechLanguage": "zh-TW", // 設定語音輸入的語言為繁體中文
    "accessibility.voice.autoSynthesize": "off", // 是否在 Copilot 回應時自動合成語音
    "accessibility.voice.speechTimeout": 1500, // 停止語音輸入的時間 (毫秒)，如果在此時間內沒有語音輸入，則會自動結束語音輸入
    // ========================================================================================================
    // MCP (Model Context Protocol) 設定
    // ========================================================================================================
    "chat.mcp.access": "all", // 設定控制哪些 MCP 伺服器可以在 VS Code 中安裝和運作
    "chat.mcp.discovery.enabled": {
        "claude-desktop": false,
        "windsurf": false,
        "cursor-global": false,
        "cursor-workspace": false
    }, // 從其他各種應用程式的設定中，設定探索模型內容通訊協定伺服器 (true 會自動搜尋 MCP 服務)
    // ========================================================================================================
    // Translation 設定 (須安裝 hbenl.vscode-google-translate 套件)
    // ========================================================================================================
    "googleTranslateExt.languages": [
        "zh-TW"
    ], // 設置 google 翻譯後的語言；快捷鍵 `Ctrl+Shift+T`
    // ========================================================================================================
    // Codesnap 設定 (須安裝 adpyke.codesnap 套件)
    // ========================================================================================================
    "codesnap.backgroundColor": "transparent", // background-color 背景色彩
    // "codesnap.boxShadow": "0px 0px 15px rgba(0, 0, 0, 0.55)", //  box-shadow 色彩 (白色 Theme)
    "codesnap.boxShadow": "none", //  box-shadow 色彩 (黑色 Theme)
    "codesnap.showWindowControls": true, // 是否顯示 OS 視窗按鈕樣式
    "codesnap.showLineNumbers": false, // 是否顯示行號
    "codesnap.shutterAction": "save", // 快門按鈕的行為 ["copy", "save"]
    // ========================================================================================================
    // liveSassCompile 設定 (須安裝 ritwickdey.live-sass-compilot 套件)
    // ========================================================================================================
    // 編譯後產生的檔案格式 (可產生多個)
    "liveSassCompile.settings.formats": [
        {
            "format": "compressed", // compressed: 壓縮格式, expanded: 展開格式
            "extensionName": ".min.css", // 編譯後綴名
            "savePath": "~/../css" // 編譯後保存的路徑
        }
    ],
    // 瀏覽器相容性設定
    "liveSassCompile.settings.autoprefix": [
        "> 1%", // 超過1%的瀏覽器
        "last 2 versions", // 最後兩個版本的瀏覽器
        "IE 10" // IE 10
    ],
    // 排除特定資料夾，不執行編譯
    "liveSassCompile.settings.excludeList": [
        "/**/node_modules/**",
        "/.vscode/**"
    ],
    // ========================================================================================================
}